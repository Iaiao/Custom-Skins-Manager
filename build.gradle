import proguard.gradle.ProGuardTask
import java.nio.file.Paths

buildscript{
    repositories{
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies{
        classpath 'net.sf.proguard:proguard-gradle:6.2.2'
    }
}

plugins {
    id 'java'
    id 'idea'
}

allprojects {
    plugins.withType(JavaPlugin) {
        group 'ru.nanit'
        version '2.1'
        sourceCompatibility = 1.8

        repositories {
            mavenCentral()
            mavenLocal()
            maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots' }
            maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
            maven { url = 'http://repo.dmulloy2.net/nexus/repository/public' }
            maven { url = 'https://jitpack.io' }
            maven { url = 'http://repo.citizensnpcs.co' }
        }
    }
}

dependencies {
    compile project(":csm-api")
    compile project(":csm-bukkit")
    compile project(":csm-bungee")
}

def jarNameWithoutExtension = jar.archiveName.with { it.take(it.lastIndexOf(".")) }
def obfuscatedJarName = "${jarNameWithoutExtension}-min.jar"
def jarFileLocation = jar.archivePath.parent
def obfuscatedFilePath = Paths.get(jarFileLocation, obfuscatedJarName)

task minimize(type: ProGuardTask, dependsOn:jar) {
    configuration 'proguard.txt'
    libraryjars files(configurations.compileOnly.collect())
    injars jar
    outjars obfuscatedFilePath.toString()
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}